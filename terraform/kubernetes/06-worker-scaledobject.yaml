apiVersion: v1
kind: Secret
metadata:
  name: keda-rabbitmq-secret
  namespace: job-scheduler
type: Opaque
stringData:
  host: amqp://user:password@rabbitmq.job-scheduler.svc.cluster.local:5672/
---
apiVersion: keda.sh/v1alpha1
kind: TriggerAuthentication
metadata:
  name: rabbitmq-trigger-auth
  namespace: job-scheduler
spec:
  secretTargetRef:
    - parameter: host
      name: keda-rabbitmq-secret
      key: host
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker
  namespace: job-scheduler
  labels:
    app: worker
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: "/metrics"
    prometheus.io/port: "9091"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: worker
  template:
    metadata:
      labels:
        app: worker
    spec:
      nodeSelector:
        "node-role": worker
      containers:
      - name: worker
        image: YOUR_ECR_REGISTRY/job-scheduler-worker:latest
        ports:
        - name: metrics
          containerPort: 9091
        env:
        - name: DATABASE_URL
          value: "postgres://user:password@postgres.job-scheduler.svc.cluster.local:5432/jobs"
        - name: RABBITMQ_URL
          value: "amqp://user:password@rabbitmq.job-scheduler.svc.cluster.local:5672/"
        - name: WORKER_CONCURRENCY
          value: "20"
        - name: DB_MAX_CONNS
          value: "5"
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: worker-scaler
  namespace: job-scheduler
spec:
  scaleTargetRef:
    name: worker
  pollingInterval: 10
  cooldownPeriod: 300
  minReplicaCount: 1
  maxReplicaCount: 40
  triggers:
  - type: rabbitmq
    metadata:
      queueName: "jobs.queue.send_email,jobs.queue.export_data"
      mode: QueueLength
      value: "10"
    authenticationRef:
      name: rabbitmq-trigger-auth 